input UserChangeInput  {
  avatarUrl: String
  name: String
  phones: [TypedPhoneInput]
  desc: String
  addrs: [TypedAddressInput]
  onboarded: Boolean
  fvrActIds: [String]
  fvrCatIds: [String]
  ethnicity: String
  occupation: String
  careerLevel: String
}
input TypedAddressInput  {
  type: AddressType
  addr: AddressInput
}
input AddressInput  {
  street1: String
  street2: String
  city: String
  state: String
  country: String
  zipcode: String
}
input TypedPhoneInput  {
  type: PhoneType
  number: String
}

enum GeneralObjectStatus {
  Active
  Deleted 
}
type GeneralObjectMeta  {
  id: String
  userId: String
  typeId: String
  status: GeneralObjectStatus
  updatedAt: Utc
  createdAt: Utc
}

type JwtUser  {
  id: String
  email: String
  org: String
  roles: [String]
}

type BaseServiceRequest  {
  invoker: JwtUser
}


enum AddressType {
  Work
  Home
  School 
}
type LatLng  {
  lat: Float
  lon: Float
}

type Address  {
  street1: String
  street2: String
  city: String
  state: String
  country: String
  zipcode: String
}

type Location  {
  latlng: LatLng
  url: String
  addr: Address
}

type TypedAddress  {
  type: AddressType
  addr: Address
}


enum PhoneType {
  Personal 
}
type TypedPhone  {
  type: PhoneType
  number: String
}

type JustTest  {
  type: PhoneType
}

type Pagination  {
  totalCount: Int
  nextToken: String
  test: JustTest
}

type UserChange  {
  avatarUrl: String
  name: String
  phones: [TypedPhone]
  desc: String
  addrs: [TypedAddress]
  onboarded: Boolean
  fvrActIds: [String]
  fvrCatIds: [String]
  ethnicity: String
  occupation: String
  careerLevel: String
}

