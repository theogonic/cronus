types:
  UserType:
    enum:
      - name: Normal
      - name: Admin
  User:
    gen:
      general-entity:
    properties:
      tags:
        type: array
        items:
          type: string
      profile:
        type: UserProfile
  UserProfile:
    properties:
      name:
        type: string
      email:
        type: string
      type:
        type: UserType
  BaseRequest:
    properties:
      user:
        type: JwtUser
  UserChange:
    properties:
      name: 
        type: string
      profile:
          type: UserProfile

schemas:
  UserResponse:
    properties:
      user:
        type: User
  
  ListUserRequest:
    properties:
      id:
        type: integer
      name:
        type: string


usecases:
  userUsercase:
    gen:
      rest:
        apiPrefix: user
        apiTags:
          - user
      resolver:
        invokerContext: user
        invokerType: JwtUser
    rules:
      - pattern: ".*"
        method:
          req:
            extends:
              - BaseRequest
            flatExtends:
          gen:
            rest:
              # extraImports:
              #   - from: ""
              #     names:
              # methodDecorators:
              #   - from: ""
              #     name: "
              paramDecorators:
                - from: "@somewhere/interesting"
                  name: "User"
                  reqProp: "user"
    methods:
      createUser:
        req:
          properties:
            id:
              type: integer
            user:
              type: UserChange
        res:
          $ref: '#/schemas/UserResponse'
        gen:
          rest: 
            method: post
            path: 'users'
          gql:
            type: mutation
      getUser:
        req:
          properties:
            id:
              type: integer
        res:
          $ref: '#/schemas/UserResponse'
        gen:
          rest:
            method: get
            path: 'user/:id'
          gql:
            type: query
      me:
        res:
          $ref: '#/schemas/UserResponse'
        gen:
          rest:
            method: get
            path: 'me'
          gql:
            type: query
      listUsers:
        req:
          $ref: '#/schemas/ListUserRequest'
        res:
          properties:
            users:
              type: array
              items:
                type: User
            total:
              type: number
        gen:
          rest:
            method: get
            path: users
            query: 
              - id
              - name
      voidRetMethod:
        req:
        res:
        gen:
          rest:
            method: get
            path: abc

    